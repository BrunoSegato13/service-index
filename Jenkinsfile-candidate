#!groovy
properties([
  parameters ([
    string(
      name: "VERSION",
      defaultValue: "",
      description: "Release candidate version tag"
    ),
    string(
      name: "BRANCH",
      defaultValue: "",
      description: "Specify the GitHub branch from which the image will be built"
    )
  ])
])

node {

  load "$JENKINS_HOME/jobvars.env"

  dir('src/github.com/reportportal/service-index') {

    stage('Checkout') {
      checkout scm
    }

    stage('Build Docker Image') {
        withEnv(["VERSION=${VERSION}", "AWS_URI=${AWS_URI}"]) {
          sh 'make IMAGE_NAME=${AWS_URI}/service-index build-image v=${VERSION}-RC-$BUILD_NUMBER'
          sh 'docker image tag ${AWS_URI}/service-index:latest ${AWS_URI}/service-index:${VERSION}-RC-$BUILD_NUMBER'
        }
    }

    stage('Push to ECR') {
      withEnv(["AWS_URI=${AWS_URI}", "AWS_REGION=${AWS_REGION}", "VERSION=${VERSION}"]) {
        def image = env.AWS_URI + '/service-index:' + env.VERSION + '-RC-' + env.BUILD_NUMBER
        def url = 'https://' + env.AWS_URI
        def credentials = 'ecr:' + env.AWS_REGION + ':aws_credentials'

        docker.withRegistry(url, credentials) {
            docker.image(image).push()
        }
      }
    }

    stage('Cleanup') {
      withEnv(["AWS_URI=${AWS_URI}"]) {
          sh 'docker rmi ${AWS_URI}/service-index:${VERSION}-RC-${BUILD_NUMBER}'
          sh 'docker rmi ${AWS_URI}/service-index:latest'
      }
    }
  }
}
               

